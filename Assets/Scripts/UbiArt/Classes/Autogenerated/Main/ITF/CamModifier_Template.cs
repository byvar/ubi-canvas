using UnityEngine;

namespace UbiArt.ITF {
	public partial class CamModifier_Template : CSerializable {
		[Serialize("cameraLookAtOffsetYUp"                   )] public float cameraLookAtOffsetYUp;
		[Serialize("cameraLookAtOffsetYDown"                 )] public float cameraLookAtOffsetYDown;
		[Serialize("cameraLookAtOffset"                      )] public Vector3 cameraLookAtOffset;
		[Serialize("cameraLookAtOffsetMaxInMulti"            )] public Vector3 cameraLookAtOffsetMaxInMulti;
		[Serialize("focale"                                  )] public Angle focale;
		[Serialize("ignoreZ"                                 )] public bool ignoreZ;
		[Serialize("zoneScaleDepthMin"                       )] public float zoneScaleDepthMin;
		[Serialize("zoneScaleDepthMax"                       )] public float zoneScaleDepthMax;
		[Serialize("zoneScaleAtDepthMin"                     )] public Vector2 zoneScaleAtDepthMin;
		[Serialize("zoneScaleAtDepthMax"                     )] public Vector2 zoneScaleAtDepthMax;
		[Serialize("zoneScaleSpeed"                          )] public float zoneScaleSpeed;
		[Serialize("cameraDecenteringOffsetAtSpeedMin"       )] public Vector2 cameraDecenteringOffsetAtSpeedMin;
		[Serialize("cameraDecenteringOffsetAtSpeedMax"       )] public Vector2 cameraDecenteringOffsetAtSpeedMax;
		[Serialize("cameraDecenteringSpeedMin"               )] public Vector2 cameraDecenteringSpeedMin;
		[Serialize("cameraDecenteringSpeedMax"               )] public Vector2 cameraDecenteringSpeedMax;
		[Serialize("cameraDecenteringBlendAtSpeedMin"        )] public Vector2 cameraDecenteringBlendAtSpeedMin;
		[Serialize("cameraDecenteringBlendAtSpeedMax"        )] public Vector2 cameraDecenteringBlendAtSpeedMax;
		[Serialize("cameraDecenteringInertieAtSpeedMin"      )] public Vector2 cameraDecenteringInertieAtSpeedMin;
		[Serialize("cameraDecenteringInertieAtSpeedMax"      )] public Vector2 cameraDecenteringInertieAtSpeedMax;
		[Serialize("cameraDecenteringSmooth"                 )] public Vector2 cameraDecenteringSmooth;
		[Serialize("cameraDecenteringSubjectLookDirWeight"   )] public Vector2 cameraDecenteringSubjectLookDirWeight;
		[Serialize("cameraDecenteringDepthMin"               )] public float cameraDecenteringDepthMin;
		[Serialize("cameraDecenteringDepthMax"               )] public float cameraDecenteringDepthMax;
		[Serialize("cameraMovingSpeedMin"                    )] public Vector2 cameraMovingSpeedMin;
		[Serialize("cameraMovingSpeedMax"                    )] public Vector2 cameraMovingSpeedMax;
		[Serialize("cameraMovingBlendAtSpeedMin"             )] public Vector2 cameraMovingBlendAtSpeedMin;
		[Serialize("cameraMovingBlendAtSpeedMax"             )] public Vector2 cameraMovingBlendAtSpeedMax;
		[Serialize("cameraMovingSmooth"                      )] public Vector2 cameraMovingSmooth;
		[Serialize("cameraMovingBlendAccelerationJustSticked")] public float cameraMovingBlendAccelerationJustSticked;
		[Serialize("rayCastScaleMax"                         )] public float rayCastScaleMax;
		[Serialize("lockPositionBlendOnEnter"                )] public float lockPositionBlendOnEnter;
		[Serialize("lockPositionBlendOnExit"                 )] public float lockPositionBlendOnExit;
		[Serialize("screenLimitUpSpeedMax"                   )] public float screenLimitUpSpeedMax;
		[Serialize("screenLimitUpScale"                      )] public float screenLimitUpScale;
		[Serialize("subjectWeightUnregisterDelay"            )] public float subjectWeightUnregisterDelay;
		[Serialize("subjectWeightRegisterDelay"              )] public float subjectWeightRegisterDelay;
		[Serialize("subjectMainVisibilityHorizontal"         )] public Vector2 subjectMainVisibilityHorizontal;
		[Serialize("subjectMainVisibilityVertical"           )] public Vector2 subjectMainVisibilityVertical;
		[Serialize("cameraMovingSmoothCoeffForLeader"        )] public float cameraMovingSmoothCoeffForLeader;
		[Serialize("subjectMainVisibilitySwitchAxeSpeed"     )] public float subjectMainVisibilitySwitchAxeSpeed;
		[Serialize("zoomBlendInMultiplayer"                  )] public float zoomBlendInMultiplayer;
		[Serialize("isMainSubject"                           )] public bool isMainSubject;
		[Serialize("isMainDRCPlayer"                         )] public bool isMainDRCPlayer;
		[Serialize("isLockedAxe"                             )] public bool isLockedAxe;
		[Serialize("isFixed"                                 )] public bool isFixed;
		protected override void SerializeImpl(CSerializerObject s) {
			base.SerializeImpl(s);
			SerializeField(s, nameof(cameraLookAtOffsetYUp));
			SerializeField(s, nameof(cameraLookAtOffsetYDown));
			SerializeField(s, nameof(cameraLookAtOffset));
			SerializeField(s, nameof(cameraLookAtOffsetMaxInMulti));
			SerializeField(s, nameof(focale));
			SerializeField(s, nameof(ignoreZ));
			SerializeField(s, nameof(zoneScaleDepthMin));
			SerializeField(s, nameof(zoneScaleDepthMax));
			SerializeField(s, nameof(zoneScaleAtDepthMin));
			SerializeField(s, nameof(zoneScaleAtDepthMax));
			SerializeField(s, nameof(zoneScaleSpeed));
			SerializeField(s, nameof(cameraDecenteringOffsetAtSpeedMin));
			SerializeField(s, nameof(cameraDecenteringOffsetAtSpeedMax));
			SerializeField(s, nameof(cameraDecenteringSpeedMin));
			SerializeField(s, nameof(cameraDecenteringSpeedMax));
			SerializeField(s, nameof(cameraDecenteringBlendAtSpeedMin));
			SerializeField(s, nameof(cameraDecenteringBlendAtSpeedMax));
			SerializeField(s, nameof(cameraDecenteringInertieAtSpeedMin));
			SerializeField(s, nameof(cameraDecenteringInertieAtSpeedMax));
			SerializeField(s, nameof(cameraDecenteringSmooth));
			SerializeField(s, nameof(cameraDecenteringSubjectLookDirWeight));
			SerializeField(s, nameof(cameraDecenteringDepthMin));
			SerializeField(s, nameof(cameraDecenteringDepthMax));
			SerializeField(s, nameof(cameraMovingSpeedMin));
			SerializeField(s, nameof(cameraMovingSpeedMax));
			SerializeField(s, nameof(cameraMovingBlendAtSpeedMin));
			SerializeField(s, nameof(cameraMovingBlendAtSpeedMax));
			SerializeField(s, nameof(cameraMovingSmooth));
			SerializeField(s, nameof(cameraMovingBlendAccelerationJustSticked));
			SerializeField(s, nameof(rayCastScaleMax));
			SerializeField(s, nameof(lockPositionBlendOnEnter));
			SerializeField(s, nameof(lockPositionBlendOnExit));
			SerializeField(s, nameof(screenLimitUpSpeedMax));
			SerializeField(s, nameof(screenLimitUpScale));
			SerializeField(s, nameof(subjectWeightUnregisterDelay));
			SerializeField(s, nameof(subjectWeightRegisterDelay));
			SerializeField(s, nameof(subjectMainVisibilityHorizontal));
			SerializeField(s, nameof(subjectMainVisibilityVertical));
			SerializeField(s, nameof(cameraMovingSmoothCoeffForLeader));
			SerializeField(s, nameof(subjectMainVisibilitySwitchAxeSpeed));
			SerializeField(s, nameof(zoomBlendInMultiplayer));
			SerializeField(s, nameof(isMainSubject));
			SerializeField(s, nameof(isMainDRCPlayer));
			SerializeField(s, nameof(isLockedAxe));
			SerializeField(s, nameof(isFixed));
		}
	}
}

